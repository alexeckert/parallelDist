on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

# Increment this version when we want to clear cache
env:
  cache-version: v4
  R_RELEASE_VERSION: "release"
  R_TEST_OS: "ubuntu-22.04"

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    env:
      R_KEEP_PKG_SOURCE: yes
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      # don't treat missing suggested packages as error
      _R_CHECK_FORCE_SUGGESTS_: false
      # Some packages might unavailable on the older versions, so let's ignore xref warnings
      _R_CHECK_RD_XREFS_: ${{ matrix.config.xref }}
      # Runs vdiffr test only on the latest version of R
      VDIFFR_RUN_TESTS: ${{ matrix.config.vdiffr }}
      VDIFFR_LOG_PATH: "../vdiffr.Rout.fail"
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: windows-latest, r: "release", xref: true }
          - { os: macOS-latest, r: "release", xref: true }
          - { 
              os: "ubuntu-22.04",
              r: "devel",
              vdiffr: false,
              xref: true,
              http-user-agent: 'release',
              rspm: "https://packagemanager.rstudio.com/cran/__linux__/jammy/latest",
            }
          - {
              os: "ubuntu-22.04",
              r: "release",
              vdiffr: true,
              xref: true,
              rspm: "https://packagemanager.rstudio.com/cran/__linux__/jammy/latest",
            }
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-tinytex@v2
      - name: Install tlmgr
        run: tlmgr install ly1 mathdesign charter microtype ae grfext

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), "depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ env.cache-version }}-${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ env.cache-version }}-${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Install system dependencies on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y libcurl4-openssl-dev 
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "22.04"))')

      - name: Install system dependencies on macOS
        if: runner.os == 'macOS'
        run: |
          # XQuartz is needed by vdiffr
          brew install --cask xquartz
          # Use only binary packages
          echo 'options(pkgType = "binary")' >> ~/.Rprofile

      - name: Install package dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Install test dependencies
        if: matrix.config.os == env.R_TEST_OS && matrix.config.r == env.R_RELEASE_VERSION
        run: |
          remotes::install_cran("covr")
        shell: Rscript {0}

      - name: Test coverage
        if: matrix.config.os == env.R_TEST_OS && matrix.config.r == env.R_RELEASE_VERSION
        run: |
          R CMD INSTALL .
          Rscript tools/run-codecov.R
