// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cpp_parallelDistVec
Rcpp::NumericVector cpp_parallelDistVec(Rcpp::List dataList, Rcpp::List attrs, Rcpp::List arguments);
RcppExport SEXP _parallelDist_cpp_parallelDistVec(SEXP dataListSEXP, SEXP attrsSEXP, SEXP argumentsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type dataList(dataListSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type attrs(attrsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type arguments(argumentsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_parallelDistVec(dataList, attrs, arguments));
    return rcpp_result_gen;
END_RCPP
}
// cpp_parallelDistMatrixVec
Rcpp::NumericVector cpp_parallelDistMatrixVec(arma::mat dataMatrix, Rcpp::List attrs, Rcpp::List arguments);
RcppExport SEXP _parallelDist_cpp_parallelDistMatrixVec(SEXP dataMatrixSEXP, SEXP attrsSEXP, SEXP argumentsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type dataMatrix(dataMatrixSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type attrs(attrsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type arguments(argumentsSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_parallelDistMatrixVec(dataMatrix, attrs, arguments));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_parallelDist_cpp_parallelDistVec", (DL_FUNC) &_parallelDist_cpp_parallelDistVec, 3},
    {"_parallelDist_cpp_parallelDistMatrixVec", (DL_FUNC) &_parallelDist_cpp_parallelDistMatrixVec, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_parallelDist(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
